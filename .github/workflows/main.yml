# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
# Reference : https://github.com/boostcampwm-2021/javascript-p4-bmtown/blob/J01A/.github/workflows/main.yml

name: Node.js CD

on:
  push:
    branches: [release]

jobs:
  deploy:
    name: Build and Deploy to nCloud
    runs-on: ubuntu-latest
    env:
      client-directory: ./client
      server-directory: ./server
      CI: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "yarn"
          cache-dependency-path: |
            client/yarn.lock

      - name: Generate Environment Variables File for Production
        run: |
          echo "REACT_APP_API_URL=$REACT_APP_API_URL" >> .env.production
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
          working-directory: ${{env.client-directory}}

      - name: Client yarn install
        run: yarn install
        working-directory: ${{env.client-directory}}

      - name: Client Build
        run: yarn build
        working-directory: ${{env.client-directory}}

      - name: clean-up deploy server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            rm -rf /usr/share/nginx/prod/*
            cd donggle-server/server && find . -maxdepth 1 ! -name public -exec rm -rf "{}" \;

      - name: copy client file to deploy server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: "./client/build"
          target: "/usr/share/nginx/prod"

      - name: copy server file to deploy server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: "./server"
          target: "donggle-server"

      - name: start app server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cp server-env/.env.production donggle-server/server/
            cd donggle-server/server/
            yarn install
            yarn bpd
